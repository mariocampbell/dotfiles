set -g default-terminal "screen-256color"
setw -g mode-keys vi
set -g status-style "fg=black,bg=#33AADD"
# scroll limit
set -g history-limit 10000

#integracion con el raton
set -g mouse on

# border colours
set -g pane-active-border-style "bg=default fg=#0088CC"

# set current directory in status bar right
# set-option -g status-right "#{b:pane_current_path} | %d-%b-%y %H:%M "
# set-option -g status-right "#{b:pane_current_path} "

# Copy and Paste in tmux
# https://www.seanh.cc/2020/12/27/copy-and-paste-in-tmux/#:~:text=If%20you%20use%20tmux's%20copy,clipboard%20by%20default%20in%20vim).
# set clipboard
# for install tmux-yank -> (ctrl + B) + (shift + i)
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'tmux-plugins/tmux-yank'

bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#!/usr/bin/env bash

# TokyoNight colors for Tmux

set -g mode-style "fg=#82aaff,bg=#3b4261"

set -g message-style "fg=#82aaff,bg=#3b4261"
set -g message-command-style "fg=#82aaff,bg=#3b4261"

set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#82aaff"

set -g status "on"
set -g status-justify "left"

set -g status-style "fg=#82aaff,bg=#1e2030"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#[fg=#1b1d2b,bg=#0db9d7,bold] #S #[fg=#0db9d7,bg=#1e2030,nobold,nounderscore,noitalics]ÓÇ∞"
set -g status-right "#[fg=#3b4261,bg=#1e2030,nobold,nounderscore,noitalics]ÓÇ≤#[fg=#82aaff,bg=#3b4261,bold,nounderscore,noitalics]#{pomodoro_status}#[fg=#0db9d7,bg=#3b4261,nobold,nounderscore,noitalics]ÓÇ≤#[fg=#1b1d2b,bg=#0db9d7,bold] #{b:pane_current_path} "

setw -g window-status-activity-style "underscore,fg=#828bb8,bg=#1e2030"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#828bb8,bg=#1e2030"
setw -g window-status-format "#[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]ÓÇ∞#[default] #I ÓÇ± #W #F #[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]ÓÇ∞"
setw -g window-status-current-format "#[fg=#1e2030,bg=#3b4261,nobold,nounderscore,noitalics]ÓÇ∞#[fg=#82aaff,bg=#3b4261,bold] #I ÓÇ± #W #F #[fg=#3b4261,bg=#1e2030,nobold,nounderscore,noitalics]ÓÇ∞"

# tmux-plugins/tmux-prefix-highlight support
set -g @prefix_highlight_output_prefix "#[fg=#ffc777]#[bg=#1e2030]ÓÇ≤#[fg=#1e2030]#[bg=#ffc777]"
set -g @prefix_highlight_output_suffix "ÓÇ≤"

# Pomodoro
# <tmux-prefix> p to toggle between starting/pausing a Pomodoro/break
# <tmux-prefix> P to cancel a Pomodoro/break
# <tmux-prefix> _ to skip a Pomodoro/break
# <tmux-prefix> C-p to open the Pomodoro timer menu
# <tmux-prefix> M-p to set a custom Pomodoro timer

set -g @pomodoro_toggle 'p'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 3                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 20            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?

set -g @pomodoro_on " üçÖ "                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete " ‚úîÔ∏é"                 # The formatted output when the break is running
set -g @pomodoro_pause " ‚è∏Ô∏é"                    # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break " ‚è≤Ô∏é break?"      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro " ‚è±Ô∏é start?"   # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'                   # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on'           # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'             # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)

set -g @pomodoro_on "#[fg=$text_red] üçÖ "
set -g @pomodoro_complete "#[fg=$text_green] üçÖ "
set -g @pomodoro_pause "#[fg=$color_yellow] üçÖ "
set -g @pomodoro_prompt_break "#[fg=$color_green] üï§ ? "
set -g @pomodoro_prompt_pomodoro "#[fg=$color_gray] üï§ ? "

set -g @pomodoro_interval_display " [%s/%s] "
set -g status-interval 1                       # Refresh the status line every second

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
